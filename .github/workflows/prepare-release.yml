name: Prepare Release

on:
  workflow_dispatch:
    branches: ["master"]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: tibdex/github-app-token@v1
      id: generate-token
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
    - name: Set up Python 2.7
      uses: actions/setup-python@v2
      with:
        python-version: 2.7
    - name: Set up Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Run prepare release script
      id: prepare-release
      run: |
        export MY_POM_VERSION=`./mvnw -q -Dexec.executable="echo" -Dexec.args='${projects.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec`
        if [[ $MY_POM_VERSION =~ ^.*SNAPSHOT$ ]];
        then
          . ./CI/prepare-release.sh
          echo "PREPARE_RELEASE_OK=yes" >> $GITHUB_ENV
        else
          echo "not preparing release for release version: " ${MY_POM_VERSION}
          echo "PREPARE_RELEASE_OK=no" >> $GITHUB_ENV
        fi
        echo "SC_VERSION=$SC_VERSION" >> $GITHUB_ENV
        echo "SC_NEXT_VERSION=$SC_NEXT_VERSION" >> $GITHUB_ENV
    - name: Create Prepare Release Pull Request
      uses: peter-evans/create-pull-request@v2
      if: env.PREPARE_RELEASE_OK == 'yes'
      with:
        token: ${{ steps.generate-token.outputs.token }}
        commit-message: prepare release ${{ env.SC_VERSION }}
        title: 'prepare release ${{ env.SC_VERSION }}'
        branch: prepare-release-${{ env.SC_VERSION }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS:  true
      MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SC_VERSION:
      SC_NEXT_VERSION:

