openapi: 3.1.0
paths:
  /parameters:
    post:
      description: "subscribes a client to updates relevant to the requestor's account,\
        \ as identified by the input token.  The supplied url will be used as the\
        \ delivery address for response payloads"
      operationId: subscribe
      parameters:
        - name: subscriptionId
          in: path
          required: true
          style: simple
          schema:
            type: string
            $comment: schema $comment
            $id: http://yourdomain.com/schemas/myschema.json
        - name: explodeFalse
          in: query
          required: true
          schema:
            type:
              - string
              - number
            if:
              properties:
                subscriptionId:
                  type: string
            then:
              properties:
                subscriptionId:
                  type: string
            else:
              properties:
                subscriptionId:
                  type: string
            $anchor: parameter $anchor
            $schema: parameter $schema
            exclusiveMaximum: 100
        - name: explodeAvoiding
          in: query
          required: true
          schema:
            type: string
            format: id
            description: the generated id
            exclusiveMaximum: 1000
            exclusiveMinimum: 10
            readOnly: true
        - name: arrayParameter
          in: query
          required: true
          content:
            application/json:
              schema:
                type: number
                description: the generated id
                readOnly: true
            application/xml:
              schema:
                type: number
                description: the generated id
                readOnly: true
        - name: arrayParameterImplementation
          in: query
          required: true
          schema:
            type: array
            contains: {}
            items:
              $ref: '#/components/schemas/SubscriptionResponse'
            maxContains: 50
            maxItems: 10
            minContains: 1
            minItems: 1
            unevaluatedItems: {}
            uniqueItems: true
        - name: arrayParameterImplementation2
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/SubscriptionResponse'
        - name: id
          in: query
          description: idParam
          schema:
            type: string
      responses:
        default:
          description: test description
          content:
            '*/*':
              schema:
                $id: http://yourdomain.com/schemas/myschema.json
                dependentSchemas:
                  pet:
                    $ref: '#/components/schemas/Pet'
                patternProperties:
                  user:
                    $ref: '#/components/schemas/User'
                properties:
                  extraObject: {}
components:
  schemas:
    Category:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    Pet:
      properties:
        id:
          type: integer
          format: int64
        category:
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
          xml:
            name: Category
        name:
          type: string
        photoUrls:
          type: array
          items:
            type: string
            xml:
              name: photoUrl
          xml:
            wrapped: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          xml:
            wrapped: true
        status:
          type: string
          description: pet status in the store
          enum:
            - "available,pending,sold"
      xml:
        name: Pet
    Tag:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    User:
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    SubscriptionResponse:
      properties:
        subscriptionId:
          type: string
