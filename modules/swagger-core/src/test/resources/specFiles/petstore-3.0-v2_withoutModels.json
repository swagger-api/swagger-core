{
    "openapi": "3.0.1",
    "paths": {
        "/pet/{petId}": {
            "get": {
                "summary": "Find pet by ID",
                "description": "Returns a pet when 0 < ID <= 10.  ID > 10 or nonintegers will simulate API error conditions",
                "operationId": "getPetById",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet": {
            "put": {
                "summary": "Update an existing pet",
                "operationId": "updatePet",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "post": {
                "summary": "Add a new pet to the store",
                "operationId": "addPet",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/pet/findByStatus": {
            "get": {
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma seperated strings",
                "operationId": "findPetsByStatus",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true
                    },
                    {
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/pet/findByTags": {
            "get": {
                "summary": "Finds Pets by tags",
                "description": "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
                "operationId": "findPetsByTags",
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags to filter by",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid tag value"
                    }
                }
            }
        }
    }
}