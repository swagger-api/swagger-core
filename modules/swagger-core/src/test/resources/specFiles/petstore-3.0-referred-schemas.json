{
    "openapi": "3.0.1",
    "tags": [
        {
            "name": "pet",
            "description": "Everything about your Pets",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "store",
            "description": "Access to Petstore orders",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        }
    ],
    "paths": {
        "/pet": {
            "put": {
                "tags": [
                    "pet"
                ],
                "summary": "Update an existing pet",
                "operationId": "updatePet",
                "requestBody": {
                    "description": "Pet object that needs to be added to the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefName"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "post": {
                "tags": [
                    "pet"
                ],
                "summary": "Add a new pet to the store",
                "operationId": "addPet",
                "requestBody": {
                    "description": "Pet object that needs to be added to the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Pet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/pet/findByTags": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Finds Pets by tags",
                "description": "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
                "operationId": "findPetsByTags",
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags to filter by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid tag value"
                    },
                    "default": {
                        "description": "Pets matching criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "User post",
                "description": "User post",
                "operationId": "postUser",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                ]
            }
        },
        "/store": {
            "post": {
                "tags": [
                    "store"
                ],
                "summary": "Store post",
                "description": "Store post",
                "operationId": "postStore",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "order placed for purchasing the pet",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Category"
                }
            },
            "PetHeader": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "PetHeader"
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Tag"
                }
            },
            "Pet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "name": {
                        "type": "string"
                    },
                    "photoUrls": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "type": "string",
                            "xml": {
                                "name": "photoUrl"
                            }
                        }
                    },
                    "tags": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "$ref": "#/components/schemas/Tag",
                            "xml": {
                                "name": "tag"
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "pet status in the store",
                        "enum": [
                            "available,pending,sold"
                        ]
                    }
                },
                "xml": {
                    "name": "Pet"
                }
            },
            "Order": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "properties" : {
                            "nested" : {
                                "$ref" : "#/components/schemas/ReferredOrder"
                            }
                        }
                    },
                    "petId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string"
                    },
                    "complete": {
                        "type": "boolean"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "shipDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ReferredOrder": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "properties" : {
                            "nested" : {
                                "$ref" : "#/components/schemas/RefName"
                            }
                        }
                    }
                }
            },
            "User": {
                "properties": {
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "userStatus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        }
    }
}