{
    "io.swagger.models.composition.AbstractBaseModelWithSubTypes": {
        "type": "object",
        "discriminator": "_type",
        "properties": {
            "_type": {
                "type": "string",
                "description": "This value is used as a discriminator for serialization"
            },
            "a": {
                "type": "string",
                "description": "An arbitrary field"
            },
            "b": {
                "type": "string",
                "description": "An arbitrary field"
            }
        },
        "description": "I am an Abstract Base Model with Sub-Types"
    },
    "io.swagger.models.composition.ModelWithFieldWithSubTypes": {
        "type": "object",
        "properties": {
            "z": {
                "description": "Contained field with sub-types",
                "$ref": "#/definitions/io.swagger.models.composition.AbstractBaseModelWithSubTypes"
            }
        },
        "description": "Class that has a field that is the AbstractBaseModelWithSubTypes"
    },
    "io.swagger.models.composition.Thing1": {
        "allOf": [
            {
                "$ref": "#/definitions/io.swagger.models.composition.AbstractBaseModelWithSubTypes"
            },
            {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string",
                        "description": "Override the abstract a"
                    },
                    "x": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Thing1 has an additional field"
                    }
                },
                "description": "Shake hands with Thing1"
            }
        ]
    },
    "io.swagger.models.composition.Thing2": {
        "allOf": [
            {
                "$ref": "#/definitions/io.swagger.models.composition.AbstractBaseModelWithSubTypes"
            },
            {
                "type": "object",
                "properties": {
                    "a": {
                        "type": "string",
                        "description": "Override the abstract a"
                    },
                    "s": {
                        "type": "string",
                        "description": "Thing2 has an additional field"
                    }
                },
                "description": "and Thing2"
            }
        ]
    }
}
