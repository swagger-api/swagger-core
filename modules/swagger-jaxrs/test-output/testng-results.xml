<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="834" started-at="2015-12-21T02:22:11Z" finished-at="2015-12-21T02:22:12Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="834" started-at="2015-12-21T02:22:11Z" finished-at="2015-12-21T02:22:12Z">
      <class name="io.swagger.ReaderTest">
        <test-method status="PASS" signature="scanClassAndFieldLevelAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanClassAndFieldLevelAnnotations" duration-ms="616" started-at="2015-12-20T20:22:11Z" description="scan class level and field level annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanClassAndFieldLevelAnnotations -->
        <test-method status="PASS" signature="scanConsumesProducesValuesWithApiClassLevelAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanConsumesProducesValuesWithApiClassLevelAnnotations" duration-ms="46" started-at="2015-12-20T20:22:12Z" description="scan consumes and produces values with api class level annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanConsumesProducesValuesWithApiClassLevelAnnotations -->
        <test-method status="PASS" signature="scanConsumesProducesValuesWithBothClassLevelAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanConsumesProducesValuesWithBothClassLevelAnnotations" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan consumes and produces values with both class level annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanConsumesProducesValuesWithBothClassLevelAnnotations -->
        <test-method status="PASS" signature="scanConsumesProducesValuesWithRsClassLevelAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanConsumesProducesValuesWithRsClassLevelAnnotations" duration-ms="16" started-at="2015-12-20T20:22:12Z" description="scan consumes and produces values with rs class level annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanConsumesProducesValuesWithRsClassLevelAnnotations -->
        <test-method status="PASS" signature="scanDeclaredExceptions()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanDeclaredExceptions" duration-ms="47" started-at="2015-12-20T20:22:12Z" description="scan resource with annotated exception" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanDeclaredExceptions -->
        <test-method status="PASS" signature="scanConsumesProducesValuesWithoutClassLevelAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanConsumesProducesValuesWithoutClassLevelAnnotations" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan consumes and produces values with no class level annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanConsumesProducesValuesWithoutClassLevelAnnotations -->
        <test-method status="PASS" signature="scanDeclaredExceptionsAndCombineWithMethodResponses()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanDeclaredExceptionsAndCombineWithMethodResponses" duration-ms="15" started-at="2015-12-20T20:22:12Z" description="scan resource with annotated exception" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanDeclaredExceptionsAndCombineWithMethodResponses -->
        <test-method status="PASS" signature="scanDeprecatedAnnotation()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanDeprecatedAnnotation" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan Deprecated annotation" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanDeprecatedAnnotation -->
        <test-method status="PASS" signature="scanEmptyPathAnnotation()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanEmptyPathAnnotation" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan empty path annotation" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanEmptyPathAnnotation -->
        <test-method status="PASS" signature="scanImplicitParam()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanImplicitParam" duration-ms="16" started-at="2015-12-20T20:22:12Z" description="scan implicit params" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanImplicitParam -->
        <test-method status="PASS" signature="scanMethods()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanMethods" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan methods" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanMethods -->
        <test-method status="PASS" signature="scanInterfaceTest()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanInterfaceTest" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan annotation from interface, issue#1427" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanInterfaceTest -->
        <test-method status="PASS" signature="scanImplicitWithFile()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanImplicitWithFile" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan implicit params with file objct" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanImplicitWithFile -->
        <test-method status="PASS" signature="scanOverriddenMethod()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanOverriddenMethod" duration-ms="31" started-at="2015-12-20T20:22:12Z" description="scan overridden method in descendantResource" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanOverriddenMethod -->
        <test-method status="PASS" signature="scanMultipleResourcesWithAnnotations()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanMultipleResourcesWithAnnotations" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="scan multiple resources with annotations" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanMultipleResourcesWithAnnotations -->
        <test-method status="PASS" signature="scanParametersFromBaseResource()[pri:0, instance:io.swagger.ReaderTest@67099f71]" name="scanParametersFromBaseResource" duration-ms="0" started-at="2015-12-20T20:22:12Z" description="it should scan parameters from base resource class" finished-at="2015-12-20T20:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scanParametersFromBaseResource -->
      </class> <!-- io.swagger.ReaderTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
